概要
====

VMware ゲストのコマンドラインから仮想ディスクシュリンクを実行するプログラ
ムです。

仮想ディスクをシュリンクするには、その仮想マシンが使用している仮想ディスク
が全てパーシスタントモードに設定されている必要があります。つまり、仮想マシ
ンのスナップショットが存在してはいけないということです。

また、マウントされたパーティション全てのルートにファイルを作成する権限を
持っている必要があります。基本的に、unix ではスーパーユーザ、windows では
アドミニストレータで使用します。


使用方法
========

コマンドラインオプションはありません。
シュリンク処理は以下のように進行します：

 1) VMware に仮想ディスクシュリンク可能かどうかを問い合わせます。
    シュリンク不可の場合、エラーメッセージを表示して終了します。

 2) マウントされているパーティションを検索し、シュリンクの準備を行います
    （使用されていない領域をクリアします）。パーティションのルートにファイ
    ルを作成する権限がない場合、エラー終了します。

    準備処理の経過は画面表示され、この間以下のキー入力を受け付けます：

    'C') シュリンク処理をキャンセルし、プログラムを終了します
    'S') 現在のパーティションの準備処理をスキップし、次へ進みます

    この処理を Ctrl+C でキャンセルしないでください。非常に大きな一時ファイ
    ルが、処理中のパーティションのルートに取り残されることがあります。

 3) 実際のシュリンク処理を開始します。この処理はホスト内で実行されます。
    ゲストは入力フォーカスを失い、処理経過ウィンドウがホスト上に表示されま
    す。キャンセルボタンをクリックすると、処理を中止することができます。


ファイルシステム
================

このプログラムは、以下のファイルシステムをサポートします：

  DOS       FAT12 および FAT16。OS がサポートしている場合は FAT32 も可
           （FreeDOS、Win 95 OSR2 以降の DOS モードなど）

  Windows   ローカルディスク上でマウントされているファイルシステム全て
            （ドライブ種別が DRIVE_FIXED のドライブ）
            デフォルトでは以下のとおりとなります：
              95 - FAT12 および FAT16
              95 OSR 2, 98, 98 SE, Me - FAT12, FAT16 および FAT32
              NT4 - FAT12, FAT16 および NTFS
              2K, XP, 2K3 - FAT12, FAT16, FAT32 および NTFS

            Win9x 用 NTFS ドライバ、NT 用 FAT32 ドライバ、ext2fs ドライバ
            など、サードパーティ製のファイルシステムドライバがインストール
            されている場合、それらのファイルシステムもサポートされます。

  Linux     adfs, affs, coherent, ext, ext2, ext3, fat, gfs, minix, msdos
            ntfs, reiserfs, sysv, ufs, umsdos, vfat, xenix, xfs, xiafs

            FIXME: Linux で、ファイルシステムがローカルディスクからマウン
            トされているかどうかを判別する方法がわからないため、ファイルシ
            ステム名称で判断しています。

  Solaris   ufs

            FIXME: Solaris で、ファイルシステムがローカルディスクからマウ
            ントされているかどうかを判別する方法がわからないため、ファイル
            システム名称で判断しています。

  FreeBSD, NetBSD and OpenBSD

            ローカルディスク上でマウントされているファイルシステム全て
            （MNT_LOCAL または ST_LOCAL フラグのセットされているもの）

  Minix     書き込み可能でマウントされている Minix パーティション


技術情報
========

このプログラムが行っていることは、以下のシェルスクリプトと大差ありません。
（VMware RPC コマンドの実行には vmw プログラムを使用します）

#!/bin/sh

# シュリンク可能かどうかを確認

RPC=`vmw rpc disk.wiper.enable` # VMware RPC コマンド実行

if [ $? -ne 0 ]; then           # RPC 呼び出し成否判定
    echo RPC call failed
    exit 1
fi

if [ "${RPC}" != "1 1" ]; then  # シュリンク可否判定
    echo Shrinking is not possible
    exit 1
fi

# シュリンク準備

for part in (マウントされているパーティションのリストを取得)
do
    # 使用されていないセクタをゼロで埋める

    dd if=/dev/zero of=${part}/wiperfile bs=1000k
    rm ${part}/wiperfile
done

# シュリンク実行

RPC=`vme rpc disk.shrink`       # VMware RPC コマンド実行

if [ $? -ne 0 ]; then           # RPC 呼び出し成否判定
    echo RPC call failed
    exit 1
fi

if [ "${RPC}" != "1 " ]; then   # キャンセル判定
    echo Cancelled
    exit 1
fi

echo Complete                   # 正常終了
exit 0
